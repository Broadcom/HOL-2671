- debug:
    msg: "Running 2571-03 role"
- pause:
    seconds: 2

- name: Set the default state to present
  set_fact:
    avi_config_state: "{{ avi_config_state|default('present') }}"
    region_subnet: 172.16.110.0

- name: Collect the cloud information
  vmware.alb.avi_api_session:
    avi_credentials: "{{ avi_creds }}"
    http_method: get
    path: cloud
    params:
      name: "Site{{region | upper}}_nsx_cloud"
  register: avi_cloud

- name: Define Bot Virtual Service
  import_role:
    name: vmware.alb.aviconfig
  vars:
    avi_credentials: "{{ avi_creds }}"
    avi_config:
      pool:
        - name: "bot-pool"
          cloud_ref: '/api/cloud?name=Site{{region | upper}}_nsx_cloud'
          tier1_lr: "/infra/tier-1s/t1-gw-site{{ region }}"
          default_server_port: 30081 
          servers: 
            - hostname: "k8sworker-01{{ region }}.vcf.sddc.lab"
              resolve_server_by_dns: true
            - hostname: "k8sworker-02{{ region }}.vcf.sddc.lab"
              resolve_server_by_dns: true
          health_monitor_refs:
            - '/api/healthmonitor?name=System-HTTP'
          fail_action:
            local_rsp:
              status_code: FAIL_HTTP_STATUS_CODE_503
            type: FAIL_ACTION_HTTP_LOCAL_RSP
      vsvip:
        - name: "bot_demo-VsVip"
          cloud_ref: '/api/cloud?name=Site{{region | upper}}_nsx_cloud'
          tier1_lr: "/infra/tier-1s/t1-gw-site{{ region }}"
          dns_info:
            - num_records_in_response: 1
              type: DNS_RECORD_A
              fqdn: "{{ 'bot.region01' + region | lower + '.vcf.sddc.lab' }}"
              algorithm: DNS_RECORD_RESPONSE_CONSISTENT_HASH
              ttl: 30
          vip:
            - vip_id: "0"
              ip_address: 
                addr: "172.16.130.12"
                type: V4
              placement_networks:
              - network_ref: "/api/network?name=ls-vmnet-{{ region }}"
                subnet:
                  mask: 24
                  ip_addr:
                    type: V4
                    addr: "{{ region_subnet }}"
      virtualservice:
        - name: "bot_demo"
          cloud_ref: '/api/cloud?name=Site{{region | upper}}_nsx_cloud'
          pool_ref: "/api/pool?name=bot-pool"
          application_profile_ref: '/api/applicationprofile?name=System-HTTP'
          bot_policy_ref: /api/botdetectionpolicy?name=System-BotDetectionPolicy
          services:
            - port: 80
            - port: 443
              enable_ssl: true
          vsvip_ref: "/api/vsvip?name=bot_demo-VsVip"
          ssl_key_and_certificate_refs:
            - "/api/sslkeyandcertificate?name=HandsOnLabs_Appcert"
            - "/api/sslkeyandcertificate?name=System-Default-Cert-EC"
          ssl_profile_ref: /api/sslprofile/?name=System-Standard
          analytics_policy:
            udf_log_throttle: 10
            full_client_logs:
              duration: 0
              throttle: 10
              enabled: true
            metrics_realtime_update:
              duration: 0
              enabled: false
            significant_log_throttle: 10
            client_insights: NO_INSIGHTS
            all_headers: true


- name: Clear pool variable
  set_fact:
    pool_servers: []
    basic_pool_servers: []